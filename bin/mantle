#!/usr/bin/env php
<?php

use Composer\Autoload\ClassLoader;
use RebelCode\Mantle\Command\BuildCommand;
use RebelCode\Mantle\Command\CleanCommand;
use RebelCode\Mantle\Command\DevCommand;
use RebelCode\Mantle\Command\InitCommand;
use RebelCode\Mantle\Command\PublishCommand;
use Symfony\Component\Console\Application;

if (!class_exists(ClassLoader::class) && file_exists(__DIR__ . '/../vendor/autoload.php')) {
    require __DIR__ . '/../vendor/autoload.php';
} else {
    fprintf(STDERR, 'Cannot find the Composer autoloader. Did you run "composer install"?' . PHP_EOL);
}

const MANTLE_LOGO = <<<LOGO
                           _    _       
  _ __ ___    __ _  _ __  | |_ | |  ___ 
 | '_ ` _ \  / _` || '_ \ | __|| | / _ \
 | | | | | || (_| || | | || |_ | ||  __/
 |_| |_| |_| \__,_||_| |_| \__||_| \___|

LOGO;

$app = new Application('Mantle', '0.1');
$app->add(new InitCommand());
$app->add(new BuildCommand());
$app->add(new DevCommand());
$app->add(new CleanCommand());
$app->add(new PublishCommand());

try {
    $app->run();
    exit(0);
} catch (Exception $e) {
    fprintf(STDERR, $e->getMessage() . ', thrown in ' . $e->getFile() . ':' . $e->getLine() . PHP_EOL);
    fprintf(STDERR, "Stack trace:\n" . $e->getTraceAsString());
    exit(1);
}
